//link
//incompleto, s√≥ funciona com entradas positivas e ineficiente, consertar!!!!

#include <bits/stdc++.h>
#define ll long long int
using namespace std;

int main(){
    
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    
    std::vector<int> ends;
    std::vector<int> ppl;
    
    
    int n; cin >> n;
    
    
    
    for (int i = 0; i < n; i++){
        
        int x; cin >> x; 
        ends.push_back(x);
        
    }
    
    for (int i = 0; i < n; i++){
        
        int p; cin >> p; 
        ppl.push_back(p);
        
    }
    
    int primeiro = ends[0];
    int tam;
    
    if (primeiro >= 0){
        
        tam = ends[n-1];
    }
    
    else if (primeiro < 0 and ends [n-1] >= 0){
        
        tam = ends[n-1] - primeiro;
        
    }
    
    else if (primeiro < 0 and ends [n-1] >= 0){
        
        tam = 0 - primeiro;
        
    }
    
    
    vector<ll> pref(tam, 0);
    ll soma = 0;
    int loc = 0;
    
    for (int i = 0; i < n; i++){
        
        for (int j = loc + 1; j < ends[i]; j++){
            
            pref[j] = soma;
            
        }
        
        
        int pp = ppl[i];
        loc = ends[i] - primeiro;
        
        
        
        soma = soma + pp;
        pref[loc] = soma;
        
    }
    
    int q; cin >> q; while(q--){
        
        int l, r;
        cin >> l >> r;
        l = l - primeiro;
        r = r - primeiro;
        ll res;
        
        if (l < 0){
            
            
            if (r < 0){
            
                res = 0;
                
                
            }
            
            
            else if (r >= 0 and r <= tam){
                
                res = pref[r];
                
                
            }
            
            else if (r >= 0 and r > tam){
                
                res = pref[tam - 1];
                
            }
            
            
        }
        
        
        else if (r == l and (l == 0 or pref[l-1] != pref[l]) and (r <= tam)){
            
            res = pref[r];
            
        }
        
        else if (r == l and pref[l-1] == pref[l] and (r <= tam)){
            
            res = 0;
            
        }
        
        else if (r != l and (r <= tam)){
        
            res = pref[r] - pref[l];
            
        }
        
        else if (r > tam){
            
            r = tam;
            
            if (l > tam){
                
                res = 0;
                
            }
            
            else{
                
                res = pref[r] - pref[l];
                
            }
            
        }
        
        
        
        
        cout << res << '\n';
    }
    

    return 0;
}
